// Основная нотация канонической формы описания синтаксиса языка.
// Нотация может располагаться в файле с расширением ".nuss" (The notation using syntax sugar).
// Нотация с синтаксическим сахаром является основой свободного синтаксиса языка Денеб.
// Нотация описана в стиле литературного программирования.
// Данный текст нотации можно использовать непосредственно для автоматической обработки.
// Нотация описана рекурсивно на самой себе.

// Нотация содержит список элементов нотации
Нотация := ЭлементНотации*;

// == Нотация ==
// Элемент нотации это определений лексемы, комментарии иил пробел форматирования.
ЭлементНотации := ОпределениеЛексемы / Комментарий / %Пробел;

// == Элемент нотации ==
// Определение лексемы основная деталь словаря.
// Определение лексемы представляет собой последовательность из лексемы и определения.
// Определение заключено в скобки определения ":=" ";".
// Между лексемой, скобками и определением могут находится пробелы.
ОпределениеЛексемы := Лексема %Пробел %НачалоОпределения %Пробел Определение %Пробел %ОкончаниеОпределения;
// Комментарий предназначен для пояснения к исходному тексту нотации.
// Комментарий может быть однострочным и многострочным.
Комментарий := ОднострочныйКомментарий / МногострочныйКомментарий;
// Пробел используется для форматирования нотации.
// Пробел представляет из себя список символов пробела, символов табуляции, символов переноса строки и символов возврата каретки.
Пробел := ПробельныйСимвол*;

// == Определение лексемы ==
// Лексема это имя конструкции языка.
// Лексема может начинаться с символа исключенной лексемы, что означает что лексема исключается из результата.
// Лексема содержит не менее одного символа лексемы.
Лексема := МеткаИсключеннойЛексемы ИмяЛексемы;
// Начало определения ":="
НачалоОпределения := ":=";
// Определение является описанием содержимого лексемы.
// Определение может быть выбором, списком, повторением, лексемой, символами, строкой, регулярным выражением или выражением в скобках.
Определение := Выбор / Список / Повторение / Лексема / Символы / Строка / РегулярноеВыражение / Блок;
// Окончание определения ";"
ОкончаниеОпределения := ";";

// == Комментарий ==
// Однострочный комментарий
ОднострочныйКомментарий := %НачалоОднострочногоКомментария ЛюбыеСимволы %ОкончаниеОднострочногоКомментария;
// Многострочный комментарий
МногострочныйКомментарий := %НачалоМногострочногоКомментария ЛюбыеСимволы %ОкончаниеМногострочногоКомментария;

// == Пробел ==
ПробельныйСимвол := СимволПробела / СимволТабуляции / СимволВозвратаКаретки / СимволПереносаСтроки;

// == Лексема ==
// Метка исключенной лексемы
МеткаИсключеннойЛексемы := ИсключеннаяЛексема-;
// Имя лексемы
ИмяЛексемы := СимволЛексемы+;

// == Определение ==
// Выбор означает в качестве содержимого один из перечисленных вариантов.
// Варианты разделены символом "/".
// Выбор содержит не менее двух вариантов.
Выбор := (Вариант _ %ПолныйРазделительВыбора)2+;
// Список означает в качестве содержимого расположенные по порядку пункты.
// Пункты могут быть разделены пробелом.
// Список содержит не менее двух пунктов.
Список := (Пункт _ %Пробел)2+;
// Повторение означает в качестве содержимого некоторое повторяющееся содержимое.
Повторение := Элемент %Пробел МеткаЩедрости %Пробел Количество;
// Символы означает один из набора символов указывается начальный и конечный символ набора заключенные в кавычки и разделенные двоеточием.
Символы := %НачалоСимвола Литерал %ОкончаниеСимвола %Пробел %РазделительДиапазона %Пробел %НачалоСимвола Литерал %ОкончаниеСимвола;
// Строка последовательность символов заключенная в кавычки
Строка := %НачалоСтроки Литералы %ОкончаниеСтроки;
// Регулярное выражение
РегулярноеВыражение := %МеткаРегулярногоВыражения %НачалоСтроки Литералы %ОкончаниеСтроки;
// Блок
Блок := %НачалоБлока Определение %ОкончаниеБлока;

// == Однострочный комментарий ==
// Начало однострочного комментария
НачалоОднострочногоКомментария := "//";
// Любые символы
ЛюбыеСимволы := ЛюбойСимвол!*;
// Окончание однострочного комментария
ОкончаниеОднострочногоКомментария := ПереносСтроки / СимволВозвратаКаретки / СимволПереносаСтроки;

// == Многострочный комментарий ==
// Начало многострочного комментария
НачалоМногострочногоКомментария := "/*";
// Окончание многострочного комментария
ОкончаниеМногострочногоКомментария := "*/";

// == ПробельныйСимвол ==
// Символ пробела
СимволПробела := " ";
// Символ табуляции
СимволТабуляции := "№9;";
// Символ возврата каретки
СимволВозвратаКаретки := "№13;";
// Символ переноса строки
СимволПереносаСтроки := "№10;";

// == МеткаИсключеннойЛексемы ==
// Символом исключенной лексемы является "%"
ИсключеннаяЛексема := "%";

// == ИмяЛексемы ==
// Символом лексемы может являтся любой кирилический символ из основного набора Unicode
СимволЛексемы := "№1024;":"№1319;";

// == Выбор ==
// Вариант
Вариант := Список / Повторение / Лексема / Символы / Строка / РегулярноеВыражение / Блок;
// Разделитель выбора
ПолныйРазделительВыбора := Пробел РазделительВыбора Пробел;
РазделительВыбора := "/";

// == Список ==
Пункт := Выбор / Повторение / Лексема / Символы / Строка / РегулярноеВыражение / Блок;

// == Повторение ==
// Элемент
Элемент := Лексема / Блок / БлокПовторения;
// Метка щедрости
МеткаЩедрости := Щедрость-;
// Количество
Количество := ЛюбоеКоличество / СписокДиапазонов / БолееОдного / НеБолееОдного / Число / Диапазон / ОграничениеСверху / ОграничениеСнизу;

// == Символы ==
// Начало символа
НачалоСимвола := Кавычка;
// Литерал
Литерал := КодСимвола / ЛюбыеСимволы;
// Окончание символа
ОкончаниеСимвола := Кавычка;
// Разделитель диапазона
РазделительДиапазона := ВертикальноеДвоеточие / ГоризонтальноеДвоеточие;

// == Строка ==
// Начало строки
НачалоСтроки := Кавычка;
// Литералы
Литералы := Литерал+;
// Окончание строки
ОкончаниеСтроки := Кавычка;

// == Регулярное выражение ==
// Метка регулярного выражения
МеткаРегулярногоВыражения := "№";

// == Блок ==
// Начало блока
НачалоБлока := "(";
// Окончание блока
ОкончаниеБлока := ")";

// == Любые символы ==
// Любой символ
ЛюбойСимвол := "№32;":"№1114109;";

// == ОкончаниеОднострочногоКомментария ==
// Перенос строки
ПереносСтроки := СимволВозвратаКаретки СимволПереносаСтроки;

// == Элемент ==
// Блок повторения
БлокПовторения := %НачалоБлока Определение %Клей Определение %ОкончаниеБлока;

// == Метка щедрости ==
Щедрость := "!";

// == Количество ==
// Любое количество
ЛюбоеКоличество := "*";
// Более одного
БолееОдного := СимволОграниченияСнизу;
// Не более одного
НеБолееОдного := СимволОграниченияСверху / ДополнительныйСимволОграниченияСверху;
// Число
Число := Цифра+;
// Список диапазонов
СписокДиапазонов := (ПолныйРазделительДиапазонов _ %ОграничениеДиапазона)2+;
// Ограничение диапазона
ОграничениеДиапазона := Число / Диапазон / ОграничениеСверху / ОграничениеСнизу;
// Диапазон
Диапазон := Число %Пробел %РазделительДиапазона %Пробел Число;
// Ограничение сверху
ОграничениеСверху := Число %Пробел СимволОграниченияСверху;
// Ограничение снизу
ОграничениеСнизу := Число %Пробел СимволОграниченияСнизу;

// == Начало символа ==
// Кавычка
Кавычка := "№34;";

// == Литерал ==
// Код символа
КодСимвола := %НачалоКодаСимвола Число %ОкончаниеКодаСимвола;

// == Разделитель диапазона ==
// Вертикальное двоеточие
ВертикальноеДвоеточие := ":";
// Горизонтальное двоеточие
ГоризонтальноеДвоеточие := "..";

// == Блок повторения ==
// Клей
Клей := "_";

// == Более одного ==
// Символ ограничения снизу
СимволОграниченияСнизу := "+";

// == Не более одного ==
// Символ ограничения сверху
СимволОграниченияСверху := "-";
// Дополнительный символ ограничения сверху
ДополнительныйСимволОграниченияСверху := "?";

// == Число ==
// Цифра
Цифра := "0":"9";

// == Список диапазонов ==
ПолныйРазделительДиапазонов := Пробел РазделительДиапазонов Пробел;
РазделительДиапазонов := ",";

// == Код символа ==
// Начало кода символа
НачалоКодаСимвола := "№";
// Окончание кода символа
ОкончаниеКодаСимвола := ";";

